syntax = "proto3";

import "google/protobuf/timestamp.proto";

service ItineraryServices {

  // To create a new user
  rpc CreateUser(CreateUserRequest) returns (User) {}

  // Get status' static values
  // TODO: remove this method after moving STATUS' to enum
  rpc GetUserStatuses(EmptyRequest) returns (Statuses) {}

  rpc GetAllStates(EmptyRequest) returns (States) {}


  rpc GetStateByFilter(StateFilterRequest) returns (States) {}

  rpc GetStatesByType(StateTypeId) returns (States) {}

  rpc GetStateById(StateId) returns (State) {}

  // TODO: remove this method after moving to enum
  rpc GetStateTypes(EmptyRequest) returns (StateTypes) {}


  // Filter use case
  rpc GetTouristPlacesInState(StateId) returns (TouristPlaces) {}
  rpc GetTouristPlaceById(TouristPlaceId) returns (TouristPlace) {}

  rpc GetUserFavoritePlaces(User) returns (Favorites) {}
  rpc AddUserFavoritePlace(AddFavoritePlaceRequest) returns (Favorite) {}
  rpc DeleteUserFavoritePlace(Favorite) returns (Favorite) {}


  // TODO remove after implementating renamed methods
  rpc GetFavoritesOfUser(User) returns (Favorites) {}
  rpc AddToFavoritesOfUser(AddFavoriteRequest) returns (Favorite) {}
  rpc DeleteFromFavoritesOfUser(FavoriteId) returns (Favorite) {}

  // TODO: passive to active
  rpc GetItinerariesOfUser(UserId) returns (Itineraries) {}
  rpc CreateItinerary(AddItineraryRequest) returns (Itinerary) {}
  rpc DeleteItinerary(ItineraryId) returns (Itinerary) {}
  rpc UpdateItinerary(UpdateItineraryRequest) returns (Itinerary) {}
  rpc GetItinerary(ItineraryId) returns (Itinerary) {}
  rpc AddPlaceToItinerary(AddItineraryPlaceRequest) returns (ItineraryPlace) {}

  rpc UpdatePlaceInItinerary(UpdateItineraryPlaceRequest)
      returns (ItineraryPlace) {}

  rpc GetItineraryPlacesByDateAndId(GetItineraryPlacesRequest)
      returns (ItineraryPlaces) {}

  rpc DeletePlaceInItinerary(ItineraryPlaceId) returns (EmptyResponse) {}

  rpc GetExpensesOfItinerary(ItineraryId) returns (Expenses) {}

  rpc AddExpenseToItinerary(AddExpenseRequest) returns (Expense) {}

  rpc GetRemainingBudget(ItineraryId) returns (RemainingBudget) {}

  // TODO: ENUM
  rpc GetExpenseCategories(EmptyRequest) returns (ExpenseCategories) {}
}

message CreateUserRequest {
  string name = 1;
  string email = 2;
  int64 mobile_no = 3;
}

/*message CreateUserResponse {*/
  /*string welcome_message = 1;*/
  /*user User = 2;*/
/*}*/

message User {
  int32 id = 1;
  string name = 2;
  string email = 3;
  int64 mobile_no = 4;
  string status = 5;
}

message Status {
  int32 id = 1;
  string status = 2;
}

message Statuses { repeated Status statuses = 1; }

// TODO: no longer required
/*message UserId { int32 id = 1; }*/

message State {
  int32 id = 1;
  string name = 2;
  string image_url = 3;
  string description = 4;
  string type = 5;
}


/*
TODO: remove later
   results = get_by_id(id)
   results = filter_by_type(results)
   return results
*/

message StateFilterRequest {
  int32 state_id = 1;
  repeated StateType types = 2;

  /*TYPE_OF_FILTER*/
  // enum
  // FILTER_BY_ID
  // FILTER_BY_STATE_TYPE
}

message States { repeated State states = 1; }

message StateId { int32 id = 1; }

message StateTypes { repeated StateType state_types = 1; }

message StateType {
  int32 id = 1;
  string type = 2;
}

message StateTypeId { int32 id = 1; }

message EmptyRequest {}

message EmptyResponse {}

message TouristPlace {
  int32 id = 1;
  string name = 2;
  string state_name = 3;
  string image_url = 4;
  string description = 5;
  double review = 6;
}

message TouristPlaces { repeated TouristPlace tourist_places = 1; }

message TouristPlaceId { int32 id = 1; }

message Favorite {
  int32 id = 1;
  TouristPlace tourist_place = 2;
}

message AddFavoriteRequest {
  int32 user_id = 1;
  int32 tourist_place_id = 2;
}

// TODO: no longer required
/*message FavoriteId { int32 id = 1; }*/

message Favorites { repeated Favorite favorites = 1; }

message AddItineraryRequest {
  int32 state_id = 1;
  google.protobuf.Timestamp start_date = 2;
  google.protobuf.Timestamp end_date = 3;
  int32 user_id = 4;
  double budget = 5;
  string notes = 6;
}

message Itinerary {
  int32 id = 1;
  State state = 2;
  google.protobuf.Timestamp start_date = 3;
  google.protobuf.Timestamp end_date = 4;
  double budget = 5;
  string notes = 6;

  repeated ItineraryPlace places = 7;
}

// TODO: no longer required
message ItineraryId { int32 id = 1; }

message UpdateItineraryRequest {
  int32 id = 1;
  double budget = 2;
  string notes = 3;
}

message Itineraries { repeated Itinerary itineraries = 1; }

message ItineraryPlace {
  int32 id = 1;
  TouristPlace tourist_place = 2;
  google.protobuf.Timestamp start_time = 4;
  google.protobuf.Timestamp end_time = 5;
}

message GetItineraryPlacesRequest {
  int32 itinerary_id = 1;
  google.protobuf.Timestamp visit_date = 2;
}

message AddItineraryPlaceRequest {
  int32 tourist_place_id = 1;
  int32 itinerary_id = 2;
  google.protobuf.Timestamp start_time = 3;
  google.protobuf.Timestamp end_time = 4;
  google.protobuf.Timestamp visit_date = 5;
}

message UpdateItineraryPlaceRequest {
  int32 id = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
}

message ItineraryPlaceId { int32 id = 1; }

message ItineraryPlaces { repeated ItineraryPlace itinerary_places = 1; }

message AddExpenseRequest {
  int32 itinerary_id = 1;
  int32 category_id = 2;
  double amount = 3;
  string description = 4;
}

message Expense {
  string expense_category = 1;
  string description = 2;
  double amount = 3;
}

message Expenses { repeated Expense expenses = 1; }

message ExpenseCategory {
  int32 id = 1;
  string category = 2;
}

message ExpenseCategories { repeated ExpenseCategory expense_categories = 1; }

message RemainingBudget { double remaining_budget = 1; }
